name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  basic-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Check repository structure
      run: |
        echo "📁 Repository contents:"
        ls -la
        
        echo -e "\n📝 Checking for documentation..."
        if [ -f "README.md" ]; then
          echo "✓ README.md found"
        else
          echo "ℹ️ README.md not found (optional)"
        fi
        
        if [ -f "CLAUDE.md" ]; then
          echo "✓ CLAUDE.md found"
        else
          echo "⚠️ CLAUDE.md not found"
        fi
        
        if [ -f "LICENSE" ]; then
          echo "✓ LICENSE found"
        else
          echo "⚠️ LICENSE file not found"
        fi
        
        echo -e "\n✅ Basic structure check complete"
    
    - name: Check for language-specific files
      run: |
        echo "🔍 Detecting project type..."
        
        # Python detection
        if [ -f "requirements.txt" ] || [ -f "setup.py" ] || [ -f "pyproject.toml" ] || [ -d "src" ]; then
          echo "🐍 Python project detected"
          if [ -f "requirements.txt" ]; then
            echo "  - requirements.txt found"
          fi
          if [ -f "setup.py" ]; then
            echo "  - setup.py found"
          fi
          if [ -f "pyproject.toml" ]; then
            echo "  - pyproject.toml found"
          fi
        fi
        
        # JavaScript/Node detection
        if [ -f "package.json" ]; then
          echo "📦 Node.js project detected"
          echo "  - package.json found"
        fi
        
        # Go detection
        if [ -f "go.mod" ]; then
          echo "🐹 Go project detected"
          echo "  - go.mod found"
        fi
        
        # Rust detection
        if [ -f "Cargo.toml" ]; then
          echo "🦀 Rust project detected"
          echo "  - Cargo.toml found"
        fi
        
        # If no specific language detected
        if [ ! -f "requirements.txt" ] && [ ! -f "setup.py" ] && [ ! -f "pyproject.toml" ] && \
           [ ! -f "package.json" ] && [ ! -f "go.mod" ] && [ ! -f "Cargo.toml" ]; then
          echo "ℹ️ No specific language configuration detected yet"
          echo "   This is fine for a new project!"
        fi
        
        echo -e "\n✅ Language detection complete"

  # Conditional Python checks - only run if Python files exist
  python-checks:
    runs-on: ubuntu-latest
    if: github.event.repository.language == 'Python' || contains(github.event.head_commit.message, 'python')
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for Python files
      id: check_python
      run: |
        if find . -name "*.py" -type f | grep -q .; then
          echo "has_python=true" >> $GITHUB_OUTPUT
          echo "🐍 Python files detected"
        else
          echo "has_python=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No Python files found"
        fi
    
    - name: Set up Python
      if: steps.check_python.outputs.has_python == 'true'
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Basic Python checks
      if: steps.check_python.outputs.has_python == 'true'
      run: |
        echo "Running basic Python syntax checks..."
        find . -name "*.py" -type f -exec python -m py_compile {} \;
        echo "✅ Python syntax check passed"

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for secrets
      run: |
        echo "🔒 Checking for potential secrets..."
        
        # Check for common secret patterns
        if grep -r -E "(api_key|apikey|api-key|secret|password|token)" --include="*.py" --include="*.js" --include="*.go" --include="*.rs" --include="*.json" --include="*.yml" --include="*.yaml" --include="*.env" . 2>/dev/null | grep -v -E "(example|sample|test|mock|dummy)" | grep -q .; then
          echo "⚠️ Warning: Potential secrets found. Please review:"
          grep -r -E "(api_key|apikey|api-key|secret|password|token)" --include="*.py" --include="*.js" --include="*.go" --include="*.rs" --include="*.json" --include="*.yml" --include="*.yaml" --include="*.env" . 2>/dev/null | grep -v -E "(example|sample|test|mock|dummy)" | head -5
          echo "..."
        else
          echo "✅ No obvious secrets detected"
        fi